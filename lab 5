%%html
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <!-- Load React and ReactDOM -->
    <script crossorigin src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <!-- Load Babel for JSX transpilation -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <style>
      body { padding: 20px; }
    </style>
  </head>
  <body>
    <div id="root"></div>
    <script type="text/babel">
      const profiles = [
        { id: 1, name: 'Alice', role: 'Developer' },
        { id: 2, name: 'Bob', role: 'Designer' },
        { id: 3, name: 'Charlie', role: 'Product Manager' },
        { id: 4, name: 'David', role: 'Developer' },
        { id: 5, name: 'Eva', role: 'Designer' },
      ];

      function ProfilePage() {
        const [searchTerm, setSearchTerm] = React.useState('');
        const [selectedRole, setSelectedRole] = React.useState('All');

        // Get unique roles plus the 'All' option
        const roles = ['All', ...new Set(profiles.map(profile => profile.role))];

        const handleSearchChange = (e) => {
          setSearchTerm(e.target.value);
        };

        const handleRoleChange = (e) => {
          setSelectedRole(e.target.value);
        };

        const handleReset = () => {
          setSearchTerm('');
          setSelectedRole('All');
        };

        // Filter profiles based on the search term and selected role
        const filteredProfiles = profiles.filter(profile => {
          const matchesName = profile.name.toLowerCase().includes(searchTerm.toLowerCase());
          const matchesRole = selectedRole === 'All' || profile.role === selectedRole;
          return matchesName && matchesRole;
        });

        return (
          <div style={{ padding: '20px' }}>
            <h1>Profile Page</h1>
            <div style={{ marginBottom: '20px' }}>
              {/* Search Box */}
              <label>
                Search by Name:&nbsp;
                <input 
                  type="text" 
                  value={searchTerm} 
                  onChange={handleSearchChange} 
                  placeholder="Enter name..."
                />
              </label>
              {/* Dropdown Filter */}
              <label style={{ marginLeft: '20px' }}>
                Filter by Role:&nbsp;
                <select value={selectedRole} onChange={handleRoleChange}>
                  {roles.map((role, index) => (
                    <option key={index} value={role}>{role}</option>
                  ))}
                </select>
              </label>
              {/* Reset Button */}
              <button onClick={handleReset} style={{ marginLeft: '20px' }}>
                Reset
              </button>
            </div>
            {/* Conditional Rendering of Profiles */}
            {filteredProfiles.length > 0 ? (
              filteredProfiles.map(profile => (
                <div 
                  key={profile.id} 
                  style={{ border: '1px solid #ccc', padding: '10px', marginBottom: '10px' }}
                >
                  <h2>{profile.name}</h2>
                  <p>Role: {profile.role}</p>
                </div>
              ))
            ) : (
              <p>No profiles found.</p>
            )}
          </div>
        );
      }

      ReactDOM.render(<ProfilePage />, document.getElementById('root'));
    </script>
  </body>
</html>
