import React, { createContext, useContext, useState, useEffect } from "react";

// Create a context for managing theme mode
const ModeContext = createContext();

export const ModeProvider = ({ children }) => {
  const [mode, setMode] = useState(() => {
    return localStorage.getItem("themeMode") || "light";
  });

  useEffect(() => {
    localStorage.setItem("themeMode", mode);
    document.body.style.backgroundColor = mode === "light" ? "black" : "white";
  }, [mode]);

  const toggleMode = () => {
    setMode((prevMode) => (prevMode === "light" ? "dark" : "light"));
  };

  return (
    <ModeContext.Provider value={{ mode, toggleMode }}>
      <div className={`app ${mode}`}>{children}</div>
    </ModeContext.Provider>
  );
};

export const useMode = () => useContext(ModeContext);

// Sample component using the ModeContext
const ThemeToggle = () => {
  const { mode, toggleMode } = useMode();

  return (
    <button className="toggle-button" onClick={toggleMode}>
      {mode === "light" ? "dark" : "light"}
    </button>
  );
};

// App component
const App = () => {
  return (
    <ModeProvider>
      <div className="container">
        <ThemeToggle />
      </div>
    </ModeProvider>
  );
};

export default App;
